// Code generated by goctl. DO NOT EDIT!
// Source: course.proto

package coursecenter

import (
	"context"

	"credit_certificate/course-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Course            = pb.Course
	GetCourseInfoReq  = pb.GetCourseInfoReq
	GetCourseInfoResp = pb.GetCourseInfoResp

	Coursecenter interface {
		GetCourseInfo(ctx context.Context, in *GetCourseInfoReq, opts ...grpc.CallOption) (*GetCourseInfoResp, error)
	}

	defaultCoursecenter struct {
		cli zrpc.Client
	}
)

func NewCoursecenter(cli zrpc.Client) Coursecenter {
	return &defaultCoursecenter{
		cli: cli,
	}
}

func (m *defaultCoursecenter) GetCourseInfo(ctx context.Context, in *GetCourseInfoReq, opts ...grpc.CallOption) (*GetCourseInfoResp, error) {
	client := pb.NewCoursecenterClient(m.cli.Conn())
	return client.GetCourseInfo(ctx, in, opts...)
}
